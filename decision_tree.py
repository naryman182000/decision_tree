# -*- coding: utf-8 -*-
"""decision_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o4LoQmM0iPGTuWvlpLGzAjrMsGoslPuR
"""

import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import numpy as np
from sklearn.metrics import accuracy_score

table=pd.read_csv("BankNote_Authentication.csv")

table.head()

table.duplicated().sum()

table=table.drop_duplicates()

table.duplicated().sum()

table.isna().sum()

table.info()

X = table.iloc[:, :-1].values
Y = table.iloc[:, -1].values.reshape(-1,1)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=.75,random_state=10, shuffle=True)

from sklearn import tree

model=tree.DecisionTreeClassifier(max_depth=5)
model=model.fit(X_train,Y_train)

tree.plot_tree(model)
d=model.tree_
s1=d.node_count

a1=model.score(X_test,Y_test)

import csv
head =['accurcy','random_stat','size']
head2 =['max_accurcy','min_accurcy','mean_accurcy','max_size','min_size','mean_size','train_size']

random=30
my_acc=[]
with open('exprment_1.csv', 'w') as file:
    writer = csv.writer(file)
    writer.writerow(head)
    for counter in range(0,5):
       X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=.25,random_state=random, shuffle=True)
       model=tree.DecisionTreeClassifier()
       model=model.fit(X_train,Y_train)
       my_acc.append(model.score(X_test,Y_test))
       my_acc.append(random)
       random=random+20  
       d=model.tree_
       my_acc.append(d.node_count)
       writer.writerow(my_acc)
       my_acc=[]

def calculate_random(train_size):
   random=30
   my_acc=[]
   my_size=[]   
   for counter2 in range(0,5):
      X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=train_size,random_state=random, shuffle=True)
      model=tree.DecisionTreeClassifier()
      model=model.fit(X_train,Y_train)
      my_acc.append(model.score(X_test,Y_test))
      random=random+20  
      d=model.tree_
      my_size.append(d.node_count)
   return my_acc,my_size

def define_stat(my_acc,my_size):
  my_res=[]
  my_acc=np.array(my_acc)
  my_size=np.array(my_size)
  my_res.append(my_size.max())
  my_res.append(my_size.min())
  my_res.append(my_size.mean())
  my_res.append(my_acc.max())
  my_res.append(my_acc.min())
  my_res.append(my_acc.mean())
  return my_res

a,b=calculate_random(0.25)
c=define_stat(a,b)
train_size=0.3
my_sizeee=[]
new_acc=[]
new_size=[]
final=[]
with open('exprmen_2.csv', 'w') as file:
    writer = csv.writer(file)
    writer.writerow(head2)
    for new_count in range(0,5):
      my_sizeee.append(train_size)
      a,b=calculate_random(0.25)
      c=define_stat(a,b)
      c.append(train_size)
      new_a=np.array(a)
      new_acc.append(new_a.mean())
      new_s=np.array(b)
      new_size.append(new_s.mean())
      writer.writerow(c)
      train_size=train_size+0.1
      print(new_acc)
      print(my_sizeee)
      print(a)
      print(b)

import matplotlib.pyplot as plt

plt.plot(my_sizeee,new_acc)

plt.plot(my_sizeee,new_size)